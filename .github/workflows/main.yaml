name: CI

on:
  push:
    branches:
      - main
  pull_request:
    # branches:
    #   - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]

    timeout-minutes: 30
    defaults:
      run:
        shell: bash -l {0}
    env:
      AWS_NO_SIGN_REQUEST: 'YES'
      GDAL_DISABLE_READDIR_ON_OPEN: 'EMPTY_DIR'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
    steps:
      # Checkout current git repository
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          # fetch all history so that setuptools-scm works
          fetch-depth: 0

      # # Install Mambaforge with conda-forge dependencies
      # - name: Setup Mambaforge
      #   uses: conda-incubator/setup-miniconda@v2.2.0
      #   with:
      #     activate-environment: envs/xrefcoord
      #     python-version: ${{ matrix.python-version }}
      #     channels: conda-forge,nodefaults
      #     channel-priority: strict
      #     miniforge-version: latest
      #     miniforge-variant: Mambaforge
      #     mamba-version: '*'
      #     run-post: false
      #     use-mamba: true

      - name: set up conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: envs/environment.yml
          init-shell: >-
            bash
          cache-environment: true
          cache-downloads: true
          post-cleanup: 'all'

      - name: Install package
        run: |
          python -m pip install -e .

      - name: Run tests
        run: |
          python -m pytest -v
